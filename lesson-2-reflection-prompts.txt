What happens when you initialize a repository? Why do you need to do it?

Need to create the .git directory and let git know that you are going to use the folder as a repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?

You are keeping a record of the changes made to the staging area as those changes are being made but you haven't saved (committed) those yet.

How can you use the staging area to make sure you have one commit per logical
change?
You can check what changes have been made prior to committing those changes. However, the way it is described isn't quite right: the changes aren't in the staging area until you add them, but you are using git diff to compare them prior to that. So, really git diff compares any changed files to the unchanged versions of those files in the current commit that is checked out (the head by default).

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
Maybe to make major changes or new additions without affecting the ongoing one...

How do the diagrams help you visualize the branch structure?

By indicating connections (parent-child), you can better understand what is on a branch and what is not.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

It merges the changes on the two branches, keeping track of those as commits in a single branch, sorted by time.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
